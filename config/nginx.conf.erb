<%
ENV["PORT"] ||= "5000"
ENV["CORES"] ||= "4"
ENV["POLL"] ||= "epoll"
ENV["WORKERS"] ||= "1024"
ENV["PING_PATH"] ||= "/proxy-ping"
ENV["DOMAIN"] ||= "theflokk.com"
ENV["BACKEND_PREFIX"] ||= "flokk-"
ENV["BACKEND_SUFFIX"] ||= "-prod"
ENV["BACKEND_HOST"] ||= ".herokuapp.com"
ENV["UI_BACKEND"] ||= ENV["BACKEND_PREFIX"] + "ui" + ENV["BACKEND_SUFFIX"] + ENV["BACKEND_HOST"]
ENV["API_BACKEND"] ||= ENV["BACKEND_PREFIX"] + "api" + ENV["BACKEND_SUFFIX"] + ENV["BACKEND_HOST"]
ENV["FORCE_HTTPS"] ||= "1"
ENV["APPS"] ||= ""
ENV["BLOCK"] ||= ""
SCHEME = ENV["FORCE_HTTPS"] == "1" ? "https" : "http"
PORT = ENV["FORCE_HTTPS"] == "1" ? "443" : "80"
%>

daemon off;
worker_processes <%= ENV["CORES"] %>;

events {
    #use <%= ENV["POLL"] %>;
    accept_mutex on;
    worker_connections  <%= ENV["WORKERS"] %>;
}

http {
    gzip on;
    gzip_comp_level 2;
    gzip_min_length 512;

    default_type  application/octet-stream;

    log_format  access  'at=proxy-info method=$request_method path=$request_uri inbound_host=$host outbound_host=$proxy_host fwd="$proxy_add_x_forwarded_for" service=$request_time status=$status bytes=$bytes_sent';
    access_log logs/nginx/access.log access;
    error_log logs/nginx/error.log;

    # Must read the body in 5 seconds.
    client_body_timeout 5;

    # Turn off the version number
    server_tokens off;

    # Listen for ping events to tell that we're up
    server {
        listen       <%= ENV["PORT"] %>;
        server_name  _;
        access_log off;

        location <%= ENV["PING_PATH"] %> {
            return 200;
        }

        location /favicon.ico {
            return 200;
        }
    }

    # The prod UI environment is a bit different since it is user facing.

    server {
        listen       <%= ENV["PORT"] %>;
        server_name  www.<%= ENV["DOMAIN"] %>;

        <% if ENV["FORCE_HTTPS"] == "1" %>
        if ($http_x_forwarded_proto != 'https') {
            return 301 https://$server_name$request_uri;
        }
        <% end %>
        location / {
            proxy_pass          http://<%= ENV["UI_BACKEND"] %>;
            proxy_redirect      off;
            proxy_set_header    Host <%= ENV["UI_BACKEND"] %>;
            proxy_set_header    X-Orig-Host $host;
            proxy_set_header    X-Orig-Proto '<%= SCHEME %>';
            proxy_set_header    X-Orig-Port <%= PORT %>;
            proxy_set_header    X-Env 'production';
            proxy_set_header    X-Auth-Host 'auth.<%= ENV["DOMAIN"] %>';
            proxy_set_header    X-API-Host 'api.<%= ENV["DOMAIN"] %>';
            proxy_set_header    X-UI-Host 'www.<%= ENV["DOMAIN"] %>';
        }

        location /api {
            rewrite /api/?(.*) /$1 break;
            proxy_pass          http://<%= ENV["API_BACKEND"] %>;
            proxy_redirect      off;
            proxy_set_header    Host <%= ENV["API_BACKEND"] %>;
            proxy_set_header    X-Orig-Host $host;
            proxy_set_header    X-Orig-Path '/api';
            proxy_set_header    X-Orig-Proto '<%= SCHEME %>';
            proxy_set_header    X-Orig-Port <%= PORT %>;
            proxy_set_header    X-Env 'production';
        }
    }

    server {
        listen       <%= ENV["PORT"] %>;
        server_name  test.<%= ENV["DOMAIN"] %>;

        <% if ENV["FORCE_HTTPS"] == "1" %>
        if ($http_x_forwarded_proto != 'https') {
            return 301 https://$server_name$request_uri;
        }
        <% end %>
        location / {
            proxy_pass          http://<%= ENV["UI_BACKEND"] %>;
            proxy_redirect      off;
            proxy_set_header    Host <%= ENV["UI_BACKEND"] %>;
            proxy_set_header    X-Orig-Host $host;
            proxy_set_header    X-Orig-Proto '<%= SCHEME %>';
            proxy_set_header    X-Orig-Port <%= PORT %>;
            proxy_set_header    X-Env 'test';
            proxy_set_header    X-Auth-Host 'auth-test.<%= ENV["DOMAIN"] %>';
            proxy_set_header    X-API-Host 'api-test.<%= ENV["DOMAIN"] %>';
            proxy_set_header    X-UI-Host 'test.<%= ENV["DOMAIN"] %>';
        }

        location /api {
            rewrite /api/?(.*) /$1 break;
            proxy_pass          http://<%= ENV["API_BACKEND"] %>;
            proxy_redirect      off;
            proxy_set_header    Host <%= ENV["API_BACKEND"] %>;
            proxy_set_header    X-Orig-Host $host;
            proxy_set_header    X-Orig-Path '/api';
            proxy_set_header    X-Orig-Proto '<%= SCHEME %>';
            proxy_set_header    X-Orig-Port <%= PORT %>;
            proxy_set_header    X-Env 'test';
        }
    }
    <% ENV["APPS"].split(",").each do |application| %>
    # <%= application %> environment

    server {
        listen       <%= ENV["PORT"] %>;
        server_name  <%= application %>.<%= ENV["DOMAIN"] %>;

        <% if ENV["FORCE_HTTPS"] == "1" %>
        if ($http_x_forwarded_proto != 'https') {
            return 301 https://$server_name$request_uri;
        }
        <% end %>
        location / {
            proxy_pass          http://<%= ENV["BACKEND_PREFIX"] %><%= application %><%= ENV["BACKEND_SUFFIX"] + ENV["BACKEND_HOST"] %>;
            proxy_redirect      off;
            proxy_set_header    Host <%= ENV["BACKEND_PREFIX"] %><%= application %><%= ENV["BACKEND_SUFFIX"] + ENV["BACKEND_HOST"] %>;
            proxy_set_header    X-Orig-Host $host;
            proxy_set_header    X-Orig-Proto '<%= SCHEME %>';
            proxy_set_header    X-Orig-Port <%= PORT %>;
            proxy_set_header    X-Env 'production';
            proxy_set_header    X-Auth-Host 'auth.<%= ENV["DOMAIN"] %>';
            proxy_set_header    X-API-Host 'api.<%= ENV["DOMAIN"] %>';
            proxy_set_header    X-UI-Host 'www.<%= ENV["DOMAIN"] %>';
        }

        <% if application != "api" %>
        location /api {
            rewrite /api/?(.*) /$1 break;
            proxy_pass          http://<%= ENV["API_BACKEND"] %>;
            proxy_redirect      off;
            proxy_set_header    Host <%= ENV["API_BACKEND"] %>;
            proxy_set_header    X-Orig-Host $host;
            proxy_set_header    X-Orig-Path '/api';
            proxy_set_header    X-Orig-Proto '<%= SCHEME %>';
            proxy_set_header    X-Orig-Port <%= PORT %>;
            proxy_set_header    X-Env 'production';
        }
        <% end %>
    }

    server {
        listen       <%= ENV["PORT"] %>;
        server_name  ~^<%= application %>-(?<environment>\w+)\.<%= ENV["DOMAIN"].gsub(/\./, "\\.") %>$;

        <% if ENV["FORCE_HTTPS"] == "1" %>
        if ($http_x_forwarded_proto != 'https') {
            return 301 https://$server_name$request_uri;
        }
        <% end %>
        location / {
            proxy_pass          'http://<%= ENV["BACKEND_PREFIX"] %><%= application %><%= ENV["BACKEND_SUFFIX"] + ENV["BACKEND_HOST"] %>';
            proxy_redirect      off;
            proxy_set_header    Host <%= ENV["BACKEND_PREFIX"] %><%= application %><%= ENV["BACKEND_SUFFIX"] + ENV["BACKEND_HOST"] %>;
            proxy_set_header    X-Orig-Host $host;
            proxy_set_header    X-Orig-Proto '<%= SCHEME %>';
            proxy_set_header    X-Orig-Port <%= PORT %>;
            proxy_set_header    X-Env $environment;
            proxy_set_header    X-Auth-Host 'auth-$environment.<%= ENV["DOMAIN"] %>';
            proxy_set_header    X-API-Host 'api-$environment.<%= ENV["DOMAIN"] %>';
            proxy_set_header    X-UI-Host 'ui-$environment.<%= ENV["DOMAIN"] %>';
        }

        <% if application != "api" %>
        location /api {
            rewrite /api/?(.*) /$1 break;
            proxy_pass          http://<%= ENV["API_BACKEND"] %>;
            proxy_redirect      off;
            proxy_set_header    Host <%= ENV["API_BACKEND"] %>;
            proxy_set_header    X-Orig-Host $host;
            proxy_set_header    X-Orig-Path '/api';
            proxy_set_header    X-Orig-Proto '<%= SCHEME %>';
            proxy_set_header    X-Orig-Port <%= PORT %>;
            proxy_set_header    X-Env $environment;
        }
        <% end %>
    }

    server {
        listen       <%= ENV["PORT"] %>;
        server_name  ~^<%= application %>-(?<environment>\w+)-(?<branch>[\w-]+)\.<%= ENV["DOMAIN"].gsub(/\./, "\\.") %>$;

        # We have to use a resolver here because we have `$branch` in the proxy_pass
        resolver 8.8.8.8;

        <% if ENV["FORCE_HTTPS"] == "1" %>
        if ($http_x_forwarded_proto != 'https') {
            return 301 https://$server_name$request_uri;
        }
        <% end %>
        location / {
            proxy_pass          'http://<%= ENV["BACKEND_PREFIX"] %><%= application %>-$branch<%= ENV["BACKEND_HOST"] %>';
            proxy_redirect      off;
            proxy_set_header    Host <%= ENV["BACKEND_PREFIX"] %><%= application %>-$branch<%= ENV["BACKEND_HOST"] %>;
            proxy_set_header    X-Orig-Host $host;
            proxy_set_header    X-Orig-Proto '<%= SCHEME %>';
            proxy_set_header    X-Orig-Port <%= PORT %>;
            proxy_set_header    X-Env $environment;
            proxy_set_header    X-Auth-Host 'auth-$environment.<%= ENV["DOMAIN"] %>';
            proxy_set_header    X-API-Host 'api-$environment.<%= ENV["DOMAIN"] %>';
            proxy_set_header    X-UI-Host 'ui-$environment.<%= ENV["DOMAIN"] %>';
        }

        <% if application != "api" %>
        location /api {
            rewrite /api/?(.*) /$1 break;
            proxy_pass          http://<%= ENV["API_BACKEND"] %>;
            proxy_redirect      off;
            proxy_set_header    Host <%= ENV["API_BACKEND"] %>;
            proxy_set_header    X-Orig-Host $host;
            proxy_set_header    X-Orig-Path '/api';
            proxy_set_header    X-Orig-Proto '<%= SCHEME %>';
            proxy_set_header    X-Orig-Port <%= PORT %>;
            proxy_set_header    X-Env $environment;
        }
        <% end %>
    }
<% end %>
}
